version: 2

aliases:
  kube_versions:
    - kube_1_11: &kube_1_11 "1.11.10"
    - kube_1_13: &kube_1_13 "1.13.7"
    - kube_1_14: &kube_1_14 "1.14.6"
    - kube_1_15: &kube_1_15 "1.15.0"
  kind_version: &kind_version "0.5.1"
  docker-login: &docker-login
    username: $DOCKER_USER
    password: $DOCKER_PASS
  compose-ci-docker: &compose-ci-docker
    - image: dockereng/kube-compose-ci-docker
      auth: *docker-login
  compose-ci-golang: &compose-ci-golang
    - image: dockereng/kube-compose-ci-golang
      auth: *docker-login
  public-golang: &public-golang
    - image: circleci/golang:1.13.0
      user: root

  e2e-kind-steps: &e2e-kind-steps
    - attach_workspace:
        at: /root
    - setup_remote_docker:
        version: 18.06.0-ce
    - run:
        name: "Prepare Kind and run e2e tests"
        command: |
          git clone https://github.com/kubernetes-sigs/kind.git /root/src/sigs.k8s.io/kind
          cd /root/src/sigs.k8s.io/kind
          git reset --hard 3907329b4ece1feab97d6281de23ea6e11812a1a
          GO111MODULE=on go mod vendor
          go install
          cd -
          export PATH="$PATH:/root/bin"
          export IMAGE_REPOSITORY=${CIRCLE_TAG:+docker}
          export IMAGE_REPOSITORY=${IMAGE_REPOSITORY:-dockereng}
          export IMAGE_PREFIX=kube-compose-
          export IMAGE_REPO_PREFIX=${IMAGE_REPOSITORY:-dockereng}/${IMAGE_PREFIX}
          export KUBERNETES_VERSION_PARAM="${KUBERNETES_VERSION:+KUBERNETES_VERSION=$KUBERNETES_VERSION}"
          make -f docker.Makefile ${KUBERNETES_VERSION_PARAM} create-kind-cluster
          make -f docker.Makefile IMAGE_ARCHIVE=/root/kube-compose-api-server-coverage.tar load-kind-image-archive
          make -f docker.Makefile IMAGE_ARCHIVE=/root/kube-compose-controller-coverage.tar load-kind-image-archive
          docker load -i /root/kube-compose-e2e-tests.tar
          make TAG=${CIRCLE_TAG:-${CIRCLE_SHA1}} e2e-kind-circleci
        no_output_timeout: 15m
    - persist_to_workspace:
        root: /root/
        paths:
          - 'src/github.com/docker/compose-on-kubernetes/e2e-coverage/compose-*/coverage.txt'

  e2e-benchmark-kind-steps: &e2e-benchmark-kind-steps
    - attach_workspace:
        at: /root
    - setup_remote_docker:
        version: 18.06.0-ce
    - run:
        name: "Prepare Kind and run e2e benchmark"
        command: |
          git clone https://github.com/kubernetes-sigs/kind.git /root/src/sigs.k8s.io/kind
          cd /root/src/sigs.k8s.io/kind
          git reset --hard 3907329b4ece1feab97d6281de23ea6e11812a1a
          GO111MODULE=on go mod vendor
          go install
          cd -
          export PATH="$PATH:/root/bin"
          export IMAGE_REPOSITORY=${CIRCLE_TAG:+docker}
          export IMAGE_REPOSITORY=${IMAGE_REPOSITORY:-dockereng}
          export IMAGE_PREFIX=kube-compose-
          export IMAGE_REPO_PREFIX=${IMAGE_REPOSITORY:-dockereng}/${IMAGE_PREFIX}
          export KUBERNETES_VERSION_PARAM="${KUBERNETES_VERSION:+KUBERNETES_VERSION=$KUBERNETES_VERSION}"
          make -f docker.Makefile ${KUBERNETES_VERSION_PARAM} create-kind-cluster
          make -f docker.Makefile IMAGE_ARCHIVE=/root/kube-compose-api-server-coverage.tar load-kind-image-archive
          make -f docker.Makefile IMAGE_ARCHIVE=/root/kube-compose-controller-coverage.tar load-kind-image-archive
          docker load -i /root/kube-compose-e2e-benchmark.tar
          make TAG=${CIRCLE_TAG:-${CIRCLE_SHA1}} e2e-benchmark-kind-circleci
        no_output_timeout: 15m
    - run:
        name: Get cluster info (on failure)
        command: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mv kubectl /root/bin
          export PATH="$PATH:/root/bin"
          make e2e-kind-pods-info
        when: on_fail

jobs:
  checkout:
    docker: *compose-ci-docker
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.07.0-ce
      - run:
          name: Login to docker hub
          command: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - persist_to_workspace:
          root: /root/
          paths:
            - 'src'
            - '.docker'

  checkout-pr:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    steps:
    - checkout
    - persist_to_workspace:
        root: /root/
        paths:
          - 'src'

  validate:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
    steps:
      - attach_workspace:
          at: /root
      - setup_remote_docker:
          version: 18.06.0-ce
      - run: make -f docker.Makefile validate
  validate-vendor:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Validate vendoring
          command: make validate-vendor
  check-licenses:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
    steps:
      - attach_workspace:
          at: /root
      - run: make check-licenses
  images:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
    steps:
      - attach_workspace:
          at: /root
      - setup_remote_docker:
          version: 18.06.0-ce
      - run:
          name: Build images
          command: |
            export IMAGE_REPOSITORY=${CIRCLE_TAG:+docker}
            export IMAGE_REPOSITORY=${IMAGE_REPOSITORY:-dockereng}
            export IMAGE_PREFIX=kube-compose-
            export IMAGE_REPO_PREFIX=${IMAGE_REPOSITORY:-dockereng}/${IMAGE_PREFIX}
            echo "building images with TAG=${CIRCLE_TAG:-${CIRCLE_SHA1}} and IMAGE_REPO_PREFIX=${IMAGE_REPO_PREFIX}"
            make -f docker.Makefile TAG=${CIRCLE_TAG:-${CIRCLE_SHA1}} images
            for image in controller controller-coverage api-server api-server-coverage installer e2e-tests e2e-benchmark; do
              docker save "${IMAGE_REPO_PREFIX}$image:${CIRCLE_TAG:-${CIRCLE_SHA1}}" -o "/root/${IMAGE_PREFIX}$image.tar"
            done
      - persist_to_workspace:
          root: /root/
          paths:
            - kube-compose-api-server.tar
            - kube-compose-api-server-coverage.tar
            - kube-compose-controller.tar
            - kube-compose-controller-coverage.tar
            - kube-compose-installer.tar
            - kube-compose-e2e-tests.tar
            - kube-compose-e2e-benchmark.tar
  e2e-kind:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
    steps: *e2e-kind-steps
  e2e-kind-1_11:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
      KUBERNETES_VERSION: *kube_1_11
      KIND_VERSION: *kind_version
    steps: *e2e-kind-steps
  e2e-kind-1_13:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
      KUBERNETES_VERSION: *kube_1_13
      KIND_VERSION: *kind_version
    steps: *e2e-kind-steps
  e2e-kind-1_14:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
      KUBERNETES_VERSION: *kube_1_14
      KIND_VERSION: *kind_version
    steps: *e2e-kind-steps
  e2e-kind-1_15:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
      KUBERNETES_VERSION: *kube_1_15
      KIND_VERSION: *kind_version
    steps: *e2e-kind-steps
  e2e-benchmark-kind:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
      KUBERNETES_VERSION: *kube_1_13
      KIND_VERSION: *kind_version
    steps: *e2e-benchmark-kind-steps
  test-unit:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
    steps:
      - attach_workspace:
          at: /root
      - setup_remote_docker:
          version: 18.06.0-ce
      - run:
          name: Run unit tests
          command: make -f docker.Makefile test-unit
      - persist_to_workspace:
          root: /root/
          paths:
            - 'src/github.com/docker/compose-on-kubernetes/coverage.txt'
  coverage-upload:
    docker: *public-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    environment:
      GOPATH: "/root"
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Upload coverage
          command: bash <(curl -s https://codecov.io/bash) -t 30879c0b-96d4-4dec-bb62-b053f96b8726
  push-to-hub:
    docker: *compose-ci-docker
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    steps:
      - attach_workspace:
          at: /root
      - setup_remote_docker:
          version: 17.07.0-ce
      - deploy:
          name: push-to-hub
          command: |
            echo "Logging in with $DOCKER_USER"
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            if [ "$CI_PULL_REQUEST" != "" ]; then
              # case where a pull request from a fork's master
              exit 0
            fi
            export IMAGE_REPOSITORY=${CIRCLE_TAG:+docker}
            export IMAGE_REPOSITORY=${IMAGE_REPOSITORY:-dockereng}
            export IMAGE_PREFIX=kube-compose-
            export IMAGE_REPO_PREFIX=${IMAGE_REPOSITORY}/${IMAGE_PREFIX}
            TAG=${CIRCLE_TAG:-${CIRCLE_SHA1}}
            for image in api-server controller installer e2e-tests; do
              docker load -i /root/${IMAGE_PREFIX}$image.tar
              docker tag ${IMAGE_REPO_PREFIX}$image:$TAG ${IMAGE_REPO_PREFIX}$image:latest
              docker push ${IMAGE_REPO_PREFIX}$image:$TAG
              if echo "${CIRCLE_TAG}" | grep -q -v "rc"; then
                docker push ${IMAGE_REPO_PREFIX}$image:latest
              fi
            done
  build-and-release-installer:
    docker: *compose-ci-golang
    working_directory: /root/src/github.com/docker/compose-on-kubernetes
    steps:
      - attach_workspace:
          at: /root
      - setup_remote_docker:
          version: 17.07.0-ce
      - deploy:
          name: push-to-hub
          command: |
            if [ "$CIRCLE_TAG" == "" ]; then
              # case where we are not on a tag
              exit 0
            fi
            export IMAGE_REPOSITORY=docker
            export IMAGE_PREFIX=kube-compose-
            export IMAGE_REPO_PREFIX=${IMAGE_REPOSITORY}/${IMAGE_PREFIX}
            TAG=${CIRCLE_TAG:-${CIRCLE_SHA1}}
            GOOS=linux make bin/installer
            mv bin/installer bin/installer-linux
            GOOS=darwin make bin/installer
            mv bin/installer bin/installer-darwin
            GOOS=windows make bin/installer
            mv bin/installer bin/installer-windows.exe
            go get -d github.com/tcnksm/ghr
            cd /root/src/github.com/tcnksm/ghr
            git checkout v0.12.0
            go install
            cd /root/src/github.com/docker/compose-on-kubernetes
            ghr -t ${GITHUB_RELEASE_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${TAG} ./bin/

workflows:
  version: 2
  pr:
    jobs:
      - checkout-pr:
          filters:
            branches:
              only: /^pull\/.*$/
      - test-unit:
          requires:
            - checkout-pr
          filters:
            branches:
              only: /^pull\/.*$/
      - validate:
          requires:
            - checkout-pr
          filters:
            branches:
              only: /^pull\/.*$/
      - validate-vendor:
          requires:
            - checkout-pr
          filters:
            branches:
              only: /^pull\/.*$/
      - check-licenses:
          requires:
            - checkout-pr
          filters:
            branches:
              only: /^pull\/.*$/
      - images:
          requires:
            - checkout-pr
          filters:
            branches:
              only: /^pull\/.*$/
      - e2e-kind:
          requires:
            - images
          filters:
            branches:
              only: /^pull\/.*$/
      - coverage-upload:
          requires:
            - e2e-kind
            - test-unit
          filters:
            branches:
              only: /^pull\/.*$/
  master-or-tag:
    jobs:
      - checkout:
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - test-unit:
          requires:
            - checkout
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - images:
          requires:
            - checkout
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - validate:
          requires:
            - images
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - validate-vendor:
          requires:
            - checkout
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - check-licenses:
          requires:
            - checkout
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - test-unit:
          requires:
            - images
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - e2e-kind-1_11:
          requires:
            - images
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - e2e-kind-1_13:
          requires:
            - images
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - e2e-kind-1_14:
          requires:
            - images
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - e2e-kind-1_15:
          requires:
            - images
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      # - e2e-benchmark-kind:
      #     requires:
      #       - images
      #     filters:
      #       tags:
      #         only: /v.*/
      #       branches:
      #         only: /^(?!pull\/).*$/
      - coverage-upload:
          requires:
            - test-unit
            - e2e-kind-1_11
            - e2e-kind-1_13
            - e2e-kind-1_14
            - e2e-kind-1_15
            # - e2e-benchmark-kind
          filters:
            tags:
              only: /v.*/
            branches:
              only: /^(?!pull\/).*$/
      - push-to-hub:
          requires:
            - e2e-kind-1_11
            - e2e-kind-1_13
            - e2e-kind-1_14
            - e2e-kind-1_15
            # - e2e-benchmark-kind
          filters:
            branches:
              only: master
            tags:
              only: /v.*/
      - build-and-release-installer:
          requires:
            - e2e-kind-1_11
            - e2e-kind-1_13
            - e2e-kind-1_14
            - e2e-kind-1_15
            # - e2e-benchmark-kind
          filters:
            branches:
              only: master
            tags:
              only: /v.*/

