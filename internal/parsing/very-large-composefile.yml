version: "2.2"

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 144.49.0.0/16

services:
  merp:
    build:
      context: ./
      dockerfile: ./services/merp/Dockerfile
      cache_from:
        - merp/merp:latest
    image: merp/merp:latest
    command: /bin/true
    env_file: ./services/merp/.env_compose
    working_dir: "/home/merp/"
    volumes:
      - ./services/merp/merp:/home/merp/merp
      - ./services/merp/serverconf:/home/merp/serverconf
    dns:
      - 144.49.5.251

  merp_api:
    extends:
      service: merp
    command: "/home/merp/serverconf/scripts/init.sh"
    links:
      - merp_pgbouncer:unused_link_merp_pgbouncer
      - merp_redis:cache
      - merp_rabbitmq:queue
      - tantrum_n_zk:kafka
      - gaebolg
      - gilgamesh
    ports:
      - "6001:80"

  merp_worker:
    extends:
      service: merp
    command: "/home/merp/serverconf/scripts/init-worker.sh"
    links:
      - merp_pgbouncer:unused_link_merp_pgbouncer
      - merp_redis:cache
      - merp_rabbitmq:queue
      - gaebolg
      - tantrum_n_zk:kafka
      - notifications
      - glorp
  merp_cron:
    extends:
      service: merp
    command: "/home/merp/serverconf/scripts/init-cron.sh"
    links:
      - merp_pgbouncer:unused_link_merp_pgbouncer
      - merp_redis:cache
      - merp_rabbitmq:queue
      - tantrum_n_zk:kafka
      - gaebolg

  merp_redis:
    image: redis:alpine
    command: "redis-server --requirepass 'oneridiculouslylongpasswordbutnotthatlong'"

  merp_rabbitmq:
    image: rabbitmq

  merp_db:
    image: postgres:9.3.5
    ports:
      - "6522:5432"
    environment:
      POSTGRES_USER: merpdb
      POSTGRES_PASSWORD: password

  merp_pgbouncer:
    image: merp/merp-pgbouncer:latest
    build:
      context: ./services/pgbouncer
      cache_from:
        - merp/merp-pgbouncer:latest
    links:
      - merp_db:unused_link_merp_db
    environment:
      - FOOBAR=espadrille
      - FOOBAZ=portmanteau
      - HONJA=alone
      - ELIAS=5432
      - DB_NAME=merpdb
    ports:
      - "7601:6543"
    dns:
      - 144.49.5.251

  glorp:
    image: glorp:latest
    environment:
      PARADISE: para,para
      GLORPED_VARIABLES: gorp,glorp,glurp,glups
    ports:
      - "24535:4575"
      - "24516:4576"
  gilgamesh:
    build:
      context: ./
      dockerfile: ./services/gilgamesh/Dockerfile
      cache_from:
        - fsn/gilgamesh:latest
    image: fsn/gilgamesh:latest
    command: /bin/true
    env_file: ./services/gilgamesh/.env_compose
    working_dir: "/home/gilgamesh/gilgamesh"
    volumes:
      - /home/gilgamesh/gilgamesh
      - ./services/gilgamesh/serverconf:/home/gilgamesh/serverconf
    dns:
      - 144.49.5.251

  gilgamesh_api:
    extends:
      service: gilgamesh
    command: "/home/gilgamesh/serverconf/scripts/init.sh"
    links:
      - gilgamesh_redis:cache
      - gilgamesh_rabbitmq:queue
      - gaebolg
      - tantrum_n_zk:kafka
      - licenseserver
      - glorp
    ports:
      - "6011:80"

  gilgamesh_worker:
    extends:
      service: gilgamesh
    command: "/home/gilgamesh/serverconf/scripts/init-worker.sh"
    links:
      - gilgamesh_pgbouncer:unused_link_gilgamesh_pgbouncer
      - gilgamesh_redis:cache
      - gilgamesh_rabbitmq:queue
      - gaebolg
      - tantrum_n_zk:kafka
      - licenseserver
      - notifications
      - glorp

  gilgamesh_cron:
    extends:
      service: gilgamesh
    command: "/home/gilgamesh/serverconf/scripts/init-cron.sh"
    links:
      - gilgamesh_pgbouncer:unused_link_gilgamesh_pgbouncer
      - gilgamesh_redis:cache
      - gilgamesh_rabbitmq:queue
      - gaebolg
      - tantrum_n_zk:kafka
      - licenseserver

  gilgamesh_db:
    image: postgres:9.3.5
    ports:
      - "21223:5432"
    environment:
      POSTGRES_USER: gilagmesh
      POSTGRES_PASSWORD: password

  gilgamesh_redis:
    image: redis:alpine

  gilgamesh_rabbitmq:
    image: rabbitmq

  gilgamesh_pgbouncer:
    image: fsn/gilgamesh-pgbouncer:latest
    build:
      context: ./services/pgbouncer
      cache_from:
        - fsn/gilgamesh-pgbouncer:latest
    links:
      - gilgamesh_db:unused_link_gilgamesh_db
    environment:
      - FOOBAR=espadrille
      - FOOBAZ=portmanteau
      - HONJA=alone
      - ELIAS=5432
      - DB_NAME=merpdb
    ports:
      - "21218:6543"
    dns:
      - 144.49.5.251
  japantown:
    image: acme/japantown:latest
    command: "node server"
    ports:
      - "7001:3000"
    environment:
      STARS_LOOK_LIKE: "*"
      SCOPE: local
    dns:
      - 144.49.5.251
  archer:
    build:
      context: ./fsn/dns
      cache_from:
        - acme/dnsmasq:latest
    image: acme/dnsmasq:latest
    ports:
      - "53:53"
      - "53:53/udp"
    environment:
      - DOCKER_HOST
      - DOCKER_HOST_IP
    dns:
      - 8.8.8.8
    networks:
      default:
        ipv4_address: 144.49.5.251

  gaebolg:
    image: gaebolg:1.5
    volumes:
      - ./services/gaebolg/gaebolg.cfg:/usr/local/etc/gaebolg/gaebolg.cfg
      - ./services/gaebolg/combined.pem:/usr/local/etc/gaebolg/combined.pem
    ports:
      - "80:80"
      - "443:443"
    dns:
      - 144.49.5.251
  potrero:
    image: acme/potrero-prod:latest
    command: ["./manage.py", "runserver"]
    ports:
      - "12112:5000"
    volumes:
      - ./services/potrero:/home/acme
    depends_on:
      - ilyasviel
    dns:
      - 144.49.5.251

  potrerokafka:
    image: spotify/kafka:latest
    links:
      - tantrum_n_zk:kafka
      - glorp
    ports:
      - "1028:80"
    environment:
      - LEGACY=true
      - XMARKSTHESPOT=xxx
      - GLORP_ENDPOINT=http://glorp:4575
      - PUBLISH_EVENTS=all
    dns:
      - 144.49.5.251
  ilyasviel:
    build:
      context: ./
      dockerfile: ./fsn/ilyasviel/Dockerfile
      cache_from:
        - acme/ilyasviel:latest
    image: acme/ilyasviel:latest
    depends_on:
      - merp_db
      - merp_redis
      - gilgamesh_db
    environment:
      SCOPE: development
      SPECTRE: xqeefghg
      ANSI: included
      BAD_PASSWORD: password
      FAVORITE_NUMBER: 1220912223
      HUNTRESS: artemis
      DND_ROLE: defender
      FIVE_MINUTES_IN_SECONDS: 300
      COMMANDMENTS: 10
      LOG_LEVEL: debug
      REDIS_DB: 0
      REDIS_HOST: merp_redis
      REDIS_PASS: oneridiculouslylongpasswordbutnotthatlong
      REDIS_PORT: 6379
      ALTERNATE: redux
      VITALITY: reduced
      IMPOSSIBLY_BAD_PASSWORD: password
      NUMBER_OF_EGGS_IN_BASKET: 12
      ANTIQUITY: longtimeago
      SERVICE_NAME: ilyasviel
      SERVICE_PUB_ADDRESS: ilyasviel.dev.acme.com
      LIMERICK: |
        "An infatuated man from Dover,
        was left by his imaginary lover.
        He pulled his hair,
        in sheer despair,
        forgetting a wig was his cover."
    ports:
      - "23129:8080"
    volumes:
      - ./services/ilyasviel/config.yml:/etc/ilyasviel/config.yml
    dns:
      - 144.49.5.251
  tantrum_n_zk:
    image: spotify/kafka:latest
    ports:
      - 9092:9092
      - 2181:2181
    environment:
      ADVERTISED_HOST: tantrum_n_zk
      ADVERTISED_PORT: 9092
      CLAPTON: cliffs_of:dover
    dns:
      - 144.49.5.251
  serializer:
    build:
      context: ./
      dockerfile: ./services/serializer/Dockerfile
      cache_from:
        - serializer/notifications:latest
    image: serializer/notifications:latest
    ports:
      - "11518:80"
    environment:
      - MERP_URL=https://merp.dev.acme.com
      - LISTERINE=mouthwash
      - AJAX=not_mouthwash
    dns:
      - 144.49.5.251
  poster_child:
    build:
      context: ./
      dockerfile: ./services/posterchild/Dockerfile
      cache_from:
        - acme/posterchild:latest
    image: acme/posterchild:latest
    env_file: services/posterchild/dev.env
    links:
      - versailles
      - poster_child_db:db
      - poster_child_redis:redis-dev
    volumes:
      - ./:/theworld
    ports:
        - 14848:80
    dns:
      - 144.49.5.251

  poster_child_db:
    image: postgres:9.5
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    ports:
      - "44444:5432"

  poster_child_redis:
    image: redis:alpine
    ports:
     - "11111:6379"
  ancestry:
    build:
      context: services/ancestry
      cache_from:
        - acme/ancestry:latest
    image: acme/ancestry:latest
    env_file: ./services/ancestry/.env_compose
    volumes:
      - ./services/ancestry:/home/acme/ancestry
    links:
      - versailles
    ports:
      - "8040:80"
    dns:
      - 144.49.5.251

  versatile:
    build:
      context: services/versatile
      cache_from:
        - acme/versatile:latest
    image: acme/versatile:latest
    env_file: ./services/versatile/env_compose
    volumes:
      - ./services/versatile:/home/acme/versatile
    links:
      - versailles
    ports:
      - "6400:80"
    dns:
      - 144.49.5.251

  versailles:
    image: redis:alpine
    command: "redis-server --requirepass 'oneridiculouslylongpasswordbutnotthatlong'"
  smooth_exporter:
    build:
      context: services/smooth-export
      cache_from:
        - acme/exporter:latest
    image: acme/exporter:latest
    ports:
      - "1925:1625/udp"
      - "19120:19120"
  dandruff_db:
    image: postgres:9.4.1


  dandruff:
    image: acme/dandruff
    depends_on:
      - dandruff_db
    environment:
      MERP_ENDPOINT: https://merp.dev.acme.com/
      PGSSLMODE: disable
      PGHOST: dandruff_db
      PGDATABASE: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      CONFIG_PATH: /data/configs/dandruff/config.yml
      DEFAULT_ROLE: user
      SALTING_KEY: nZZyWD8+2jfiWQGLtFG9m=
      QUOTED_BOOLEAN: 'false'
      BITCOIN_MINER_URL: https://acme.rAmFLWtG05Po17urj05S.bitminerz.com
      BITCOIN_MINER_ID: null@null.devnull
      BITCOIN_MINER_API_KEY: chCyuIdas4J0CIjGwMZ0FMHxM9MJJfcymF8bwmAU
      BITCOIN_MINER_MAX_DEPTH: 5m
    ports:
      - "8765:80"
    volumes:
      - ./services/dandruff:/data:ro
    command: bash -c "sleep 5 && main"
    dns:
      - 144.49.5.251
  madoka:
    image: acme/madoka:0.12.5
    dns:
      - 144.49.5.251
  micheldb:
    image: postgres:9.3.5
    ports:
      - 5432
    environment:
      - POSTGRES_USER=michel
      - POSTGRES_PASSWORD=michel

  michel:
    image: michel/my-first-image:latest
    ports:
      - 8080:8080
    depends_on:
      - micheldb
    environment:
      - DB_PASSWD=michel
      - DB_USER=michel
      - DB_HOST=micheldb
      - MICHEL_STATUS=online
      - MICHEL_ID=ajy8So8cNCiMvFRrweP7
      - MICHEL_BIRTHDAY=1998-11-21
    dns:
      - 144.49.5.251
  sunset_ui:
    image: acme/sunset-ui:latest
    environment:
      - "MERP_ENDPOINT=https://merp.dev.acme.com/"
      - "SUNSET_HOST=https://sunset.dev.acme.com"
      - "SUNSET_STREAM_HOST=wss://ws.sunset.dev.acme.com:7999"
    ports:
      - "7998:80"
    dns:
      - 144.49.5.251

  police:
    build:
      context: ./
      dockerfile: ./services/police-app/Dockerfile
      cache_from:
        - acme/police-app:staging
    image: acme/police-app:staging
    command: /bin/true
    env_file: ./services/police-app/env_compose
    dns:
      - 144.49.5.251

  police_dev:
    extends:
      service: police
    volumes:
      - "./services/police-app:/app:rw"

  police_frontend:
    extends:
      service: police_dev
    command: frontend
    links:
      - police_db:db
      - police_cache:cache
      - police_queue:queue
      - police_mongodb:mongodb
      - sunset_ui:ui
    ports:
      - "8000:80"
    environment:
      - EXTRA_ARGS=--reload

  police_workerdefault:
    extends:
      service: police_dev
    command: worker-default
    links:
      - police_db:db
      - police_cache:cache
      - police_queue:queue
      - police_mongodb:mongodb
    environment:
      - EXTRA_ARGS=--autoreload

  police_workermaintenance:
    extends:
      service: police_dev
    command: worker-maintenance
    links:
      - police_db:db
      - police_cache:cache
      - police_queue:queue
      - police_mongodb:mongodb
    environment:
      - EXTRA_ARGS=--autoreload

  police_workerevents:
    extends:
      service: police_dev
    command: worker-events
    links:
      - police_db:db
      - police_cache:cache
      - police_queue:queue
      - police_mongodb:mongodb
      - glorp

  police_kafka2sqs:
    depends_on:
      - glorp
      - tantrum_n_zk
    image: acme/kafka2sqs:latest
    environment:
      WILSON: perfectlife
      DEAD_CAN_DANCE: this_mortal_coil
      FIRST_CIGARETTE: "-"
      BLACKBIRDS_MOOR: sometimes
      WATER: no-memory
      MEMORY: distant
      NAME: police
    ports:
      - 5622

  police_live:
    build:
      context: ./
      dockerfile: services/police-live/Dockerfile
      cache_from:
        - acme/police-live:staging
    image: acme/police-live:staging
    links:
      - police_cache:redis
      - police_mongodb:mongodb
    env_file: ./services/police-live/env_compose
    dns:
      - 144.49.5.251
    volumes:
      - "./services/police-live:/app:ro"

  police_db:
    image: mysql:5.6
    environment:
      - MYSQL_ROOT_PASSWORD=police
      - MYSQL_DATABASE=police

  police_cache:
    image: redis:alpine

  police_queue:
    image: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=police

  police_mongodb:
    image: police/mongodb:3.0
    environment:
      OPLOG_SIZE: 1
      AUTH: "no"

  police_node1:
    build:
      context: ./services/police-app/penitentiary/cells/node1
      cache_from:
        - acme/police-app:node1
    image: acme/police-app:node1
    privileged: true
    networks:
      default:
        ipv4_address: 144.49.5.123
    env_file: ./services/police-app/penitentiary/cells/node1/env_compose
    dns:
      - 144.49.5.251

  police_node2:
    build:
      context: ./services/police-app/penitentiary/cells/node2
      cache_from:
        - acme/police-app:node2
    image: acme/police-app:node2
    privileged: true
    networks:
      default:
        ipv4_address: 144.49.5.133
    env_file: ./services/police-app/penitentiary/cells/node2/env_compose
    dns:
      - 144.49.5.251

  police_frontenddns:
    extends:
      service: police_dev
    command: dnsapi
    links:
      - police_db:db
    environment:
      - "DEFAULT_CONN_MAX_AGE=1200"
      - EXTRA_ARGS=--reload
    networks:
      default:
        ipv4_address: 144.49.5.143
    dns:
      - 144.49.5.251

  police_dns:
    build:
      context: ./services/police-dns
      cache_from:
        - acme/police-dns:staging
    image: acme/police-dns:staging
    environment:
      - POLICE_DNS_API_HOST=police_frontenddns
    depends_on:
      - "police_frontenddns"
    ports:
      - "53153:53/udp"
      - "53253:53/tcp"